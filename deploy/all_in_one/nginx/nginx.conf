user root;
# May be equal to `grep processor /proc/cpuinfo | wc -l`
worker_processes auto;
worker_cpu_affinity auto;

# PCRE JIT can speed up processing of regular expressions significantly.
pcre_jit on;

# error_log
error_log  /var/log/nginx/error.log notice;

events {
    # Should be equal to `ulimit -n`
    worker_connections 1024;

    # Let each process accept multiple connections.
    multi_accept on;

    # Preferred connection method for newer linux versions.
    use epoll;
}

stream {
    server {
        listen 2222;  # 监听 2222 端口（SSH 默认端口）
        proxy_pass gitlab-shell:2222;  # 转发到后端 gitlay shell SSH 服务器
    }
}
http {
    # Disables the “Server” response header
    server_tokens off;
    charset utf-8;

    # Sendfile copies data between one FD and other from within the kernel.
    # More efficient than read() + write(), since the requires transferring
    # data to and from the user space.
    sendfile on;

    # Tcp_nopush causes nginx to attempt to send its HTTP response head in one
    # packet, instead of using partial frames. This is useful for prepending
    # headers before calling sendfile, or for throughput optimization.
    tcp_nopush on;

    # Don't buffer data-sends (disable Nagle algorithm). Good for sending
    # frequent small bursts of data in real time.
    #
    tcp_nodelay on;

    # http://nginx.org/en/docs/hash.html
    types_hash_max_size 4096;
    include mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Logging Settings
    access_log  /var/log/nginx/access.log  main;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    # gzip_comp_level 9;
    gzip_min_length 1100;
    gzip_buffers 16 8k; gzip_proxied any;
    # gzip_http_version 1.1;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;

    # 配置nginx代理大文件请求

    # nginx不缓冲客户端请求，也不缓冲代理服务器请求
    proxy_request_buffering off;
    proxy_buffering off;

    # 临时存储路径，确保这个路径有足够空间
    client_body_temp_path /var/nginx/client_body_temp;
    #  临时文件的最大大小
    proxy_max_temp_file_size 150000M;

    # 客户端发送请求最大大小
    client_max_body_size 150000M;

    # 增加超时设置以支持大文件传输
    client_body_timeout 300s;
    client_header_timeout 300s;
    send_timeout 300s;
    keepalive_timeout 300s;
    proxy_read_timeout      3600;
    proxy_connect_timeout   300;
    proxy_redirect          off;
    proxy_http_version 1.1;

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    server {
        listen _CSGHUB_DOMAINPORT;
        server_name _CSGHUB_DOMAINNAME;

        location / {
            proxy_pass http://csghub_portal:3000;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name:_CSGHUB_DOMAINPORT;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
        }

        location /api/ {
            proxy_pass http://csghub_server:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /hf/ {
            proxy_pass http://csghub_server:8080/hf/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /endpoint/ {
            proxy_pass http://csghub_server_proxy:8083;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection $connection_upgrade;
            proxy_cookie_flags ~ nosecure samesite=lax;
        }

      # used for git operations
        location ~* \.git(/.*)?$ {
               proxy_pass http://csghub_server:8080;
               proxy_set_header Host $host;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-Forwarded-Proto http;
        }
	
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root  /usr/share/nginx/html;
        }
    }


    server {
        listen 31001;
        server_name _CSGHUB_DOMAINNAME;

        location / {
        proxy_pass http://casdoor:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root  /usr/share/nginx/html;
        }
    }

}
